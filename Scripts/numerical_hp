-- test a lot of improve. (performance,calculation,prediction)
require("libs.ScriptConfig")
require("libs.Utils")
require("libs.SideMessage")

config = ScriptConfig.new()
config:SetParameter("Active", "Z", config.TYPE_HOTKEY)
config:SetParameter("Combokey", "H", config.TYPE_HOTKEY)
config:SetParameter("Auto", true)
config:Load()

local toggleKey = config.Active
local ComboKey = config.Combokey
local AutoGlobal = config.Auto
local xx = nil
local yy = nil

if math.floor(client.screenRatio*100) == 177 then
	xx = client.screenSize.x/300
	yy = client.screenSize.y/1.372
elseif math.floor(client.screenRatio*100) == 125 then
	xx = client.screenSize.x/512
	yy = client.screenSize.y/1.341
elseif math.floor(client.screenRatio*100) == 160 then
	xx = client.screenSize.x/512
	yy = client.screenSize.y/1.378
else
	xx = client.screenSize.x/512
	yy = client.screenSize.y/1.378
end

--Stuff
local hero = {} local note = {} local reg = false local combo = false
local activ = true local draw = true local myhero = nil

--Draw function
local shft = client.screenSize.x/1600
local F14 = drawMgr:CreateFont("F14","Calibri",14*shft,500*shft)
local rect = drawMgr:CreateRect(xx-1,yy-1,26,26,0x00000090,true) rect.visible = false
local icon = drawMgr:CreateRect(xx,yy,24,24,0x000000ff) icon.visible = false
local dmgCalc = drawMgr:CreateText(xx*shft, yy-18*shft, 0x00000099,"Dmg",F14) dmgCalc.visible = false

function Load()
	if PlayingGame() then
		local me = entityList:GetMyHero()
		
			reg = true
			myhero = me.classId
			script:RegisterEvent(EVENT_TICK,Tick)
			script:RegisterEvent(EVENT_KEY,Key)
			script:UnregisterEvent(Load)
		
	end
end

function Tick(tick)
	
	if not SleepCheck() then return end	Sleep(200)
	local me = entityList:GetMyHero()	
	if not me then return end
	local ID = me.classId	
	if ID ~= myhero then GameClose() end
	
	local enemies = entityList:GetEntities({type=LuaEntity.TYPE_HERO,team = 5-me.team})
		for i,v in ipairs(enemies) do
			if v.healthbarOffset ~= -1 and not v:IsIllusion() then
				if not hero[v.handle] then
					hero[v.handle] = drawMgr:CreateText(20,0-45, 0xFFFFFF99, "",F14) hero[v.handle].visible = false hero[v.handle].entity = v hero[v.handle].entityPosition = Vector(0,0,v.healthbarOffset)
				end
				if v.visible and v.alive and v.health > 0 then
					hero[v.handle].visible = draw
					local life=v.health
					hero[v.handle].text = " "..life
					
				elseif hero[v.handle].visible then
					hero[v.handle].visible = false
				end
			end
		end

	
	dmgCalc.visible = draw
	rect.visible,icon.visible = activ,activ
end

function Key(msg,code)
	if client.chat then return end
	if IsKeyDown(toggleKey) then
		activ = not activ
	elseif IsKeyDown(ComboKey) then
		combo = not combo
	end	
	if IsMouseOnButton(xx,yy,24,24) then
		if msg == LBUTTON_DOWN then
			activ = (not activ)
		end
	elseif IsMouseOnButton(xx*shft, yy-18*shft,24,24) then
		if msg == LBUTTON_DOWN then
			draw = (not draw)
		end
	end
end






function IsMouseOnButton(x,y,h,w)
	local mx = client.mouseScreenPosition.x
	local my = client.mouseScreenPosition.y
	return mx > x and mx <= x + w and my > y and my <= y + h
end

function GenerateSideMessage(heroName,spellName)
	local test = sideMessage:CreateMessage(200,60)
	test:AddElement(drawMgr:CreateRect(10,10,72,40,0xFFFFFFFF,drawMgr:GetTextureId("NyanUI/heroes_horizontal/"..heroName:gsub("npc_dota_hero_",""))))
	test:AddElement(drawMgr:CreateRect(85,16,62,31,0xFFFFFFFF,drawMgr:GetTextureId("NyanUI/other/arrow_usual")))
	test:AddElement(drawMgr:CreateRect(150,10,40,40,0xFFFFFFFF,drawMgr:GetTextureId("NyanUI/spellicons/"..spellName)))
end

function KSCastSpell(spell,target,me,lsblock)
	if spell and spell:CanBeCasted() and me:CanCast() and not (target and lsblock == true and target.IsLinkensProtected and target:IsLinkensProtected()) then
		local prev = SelectUnit(me)
		if not target then
			entityList:GetMyPlayer():UseAbility(spell)
		else
			entityList:GetMyPlayer():UseAbility(spell,target)
		end
		SelectBack(prev)
	end
end

function KSCanDie(hero,me,skill,dmgs)
	if me.classId == CDOTA_Unit_Hero_Axe then
		if me:IsMagicDmgImmune() then
			return true
		elseif NotDieFromSpell(skill,hero,me) and NotDieFromBM(hero,me,dmgs) then
			return true
		end
	elseif hero:CanDie() then
		if me:IsMagicDmgImmune() then
			return true	
		elseif NotDieFromSpell(skill,hero,me) and not hero:DoesHaveModifier("modifier_nyx_assassin_spiked_carapace") and NotDieFromBM(hero,me,dmgs) then
			return true
		end
	end
	return false
end

function NotDieFromSpell(skill,hero,me)
	if me:DoesHaveModifier("modifier_pugna_nether_ward_aura") then
		if me.health < me:DamageTaken((skill.manacost*1.75), DAMAGE_MAGC, hero) then
			return false
		end		
	end
	return true
end

function NotDieFromBM(hero,me,dmg)
	if hero:DoesHaveModifier("modifier_item_blade_mail_reflect") and me.health < me:DamageTaken(dmg, DAMAGE_PURE, hero) then
		return false
	end
	return true
end

function MorphMustDie(target,value)
	if target.classId == CDOTA_Unit_Hero_Morphling then
		local gain = target:GetAbility(3)
		local hp = {38,76,114,190}
		if gain and gain.level > 0 then
			if target:DoesHaveModifier("modifier_morphling_morph_agi") and target.strength > 1 then
				return value*(0 - hp[gain.level] + 1)
			elseif target:DoesHaveModifier("modifier_morphling_morph_str") and target.agility > 1 then
				return value*hp[gain.level]
			end
		end
	end
	return 0
end

function KillStealer(hero)
	local hId = hero.classId
	if hId == CDOTA_Unit_Hero_AncientApparition or hId == CDOTA_Unit_Hero_Legion_Commander or hId == CDOTA_Unit_Hero_Batrider or hId == CDOTA_Unit_Hero_Beastmaster or hId == CDOTA_Unit_Hero_Brewmaster or hId == CDOTA_Unit_Hero_Bristleback or hId == CDOTA_Unit_Hero_ChaosKnight or hId == CDOTA_Unit_Hero_Clinkz or hId == CDOTA_Unit_Hero_DarkSeer or hId == CDOTA_Unit_Hero_Dazzle or hId == CDOTA_Unit_Hero_DrowRanger or hId == CDOTA_Unit_Hero_EmberSpirit or hId == CDOTA_Unit_Hero_Enchantress or hId == CDOTA_Unit_Hero_Enigma or hId == CDOTA_Unit_Hero_FacelessVoid or hId == CDOTA_Unit_Hero_Gyrocopter or hId == CDOTA_Unit_Hero_Huskar or hId == CDOTA_Unit_Hero_Jakiro or hId == CDOTA_Unit_Hero_Juggernaut or hId == CDOTA_Unit_Hero_KeeperOfTheLight or hId == CDOTA_Unit_Hero_Kunkka or hId == CDOTA_Unit_Hero_LoneDruid or hId == CDOTA_Unit_Hero_Lycan or hId == CDOTA_Unit_Hero_Medusa or hId == CDOTA_Unit_Hero_Meepo or hId == CDOTA_Unit_Hero_Meepo or hId == CDOTA_Unit_Hero_Oracle or hId == CDOTA_Unit_Hero_Phoenix or hId == CDOTA_Unit_Hero_Pudge or hId == CDOTA_Unit_Hero_Pugna or hId == CDOTA_Unit_Hero_Razor or hId == CDOTA_Unit_Hero_Riki or hId == CDOTA_Unit_Hero_SandKing or hId == CDOTA_Unit_Hero_Silencer or hId == CDOTA_Unit_Hero_Skywrath_Mage or hId == CDOTA_Unit_Hero_Slardar or hId == CDOTA_Unit_Hero_Slark or hId == CDOTA_Unit_Hero_SpiritBreaker or hId == CDOTA_Unit_Hero_StormSpirit or hId == CDOTA_Unit_Hero_TemplarAssassin or hId == CDOTA_Unit_Hero_Terrorblade or hId == CDOTA_Unit_Hero_Tiny or hId == CDOTA_Unit_Hero_Treant or hId == CDOTA_Unit_Hero_TrollWarlord or hId == CDOTA_Unit_Hero_Ursa or hId == CDOTA_Unit_Hero_Venomancer or hId == CDOTA_Unit_Hero_Viper or hId == CDOTA_Unit_Hero_Warlock or hId == CDOTA_Unit_Hero_Weaver or hId == CDOTA_Unit_Hero_Wisp or hId == CDOTA_Unit_Hero_WitchDoctor or hId == CDOTA_Unit_Hero_AbyssalUnderlord or hId == CDOTA_Unit_Hero_PhantomAssassin or hId == CDOTA_Unit_Hero_Omniknight then 
		return true
	end
	return false
end

function SmartSS(me)
	local Spell = me:FindSpell("invoker_sun_strike")
	local Exort = me:GetAbility(3)
	icon.textureId = drawMgr:GetTextureId("NyanUI/spellicons/"..Spell.name)
	if Exort.level > 0 then
		local SSDmg = {100,162,225,287,350,412,475}
		local Dmg = SSDmg[Exort.level]
		local CastPoint = 1.7 + client.latency/1000
		local enemies = entityList:GetEntities({type=LuaEntity.TYPE_HERO,team = 5-me.team,illusion=false})			
		for i,v in ipairs(enemies) do
			if v.healthbarOffset ~= -1 then
				if not hero[v.handle] then
					hero[v.handle] = drawMgr:CreateText(20,0-45, 0xFFFFFF99, "",F14) hero[v.handle].visible = false hero[v.handle].entity = v hero[v.handle].entityPosition = Vector(0,0,v.healthbarOffset)
				end
				if v.visible and v.alive and v.health > 1 then
					hero[v.handle].visible = draw
					local DmgS = math.floor(v:DamageTaken(Dmg,DAMAGE_PURE,me))
					local DmgF = math.floor(v.health - DmgS + CastPoint*v.healthRegen + MorphMustDie(v,CastPoint))
					--hero[v.handle].text = " "..DmgF						
					if DmgF < 0 and KSCanDie(v,me) and (not me:IsMagicDmgImmune() and NotDieFromSpell(Spell,v,me) and not v:DoesHaveModifier("modifier_nyx_assassin_spiked_carapace") and NotDieFromBM(v,me,DmgS)) then
						if not note[v.handle] then
							note[v.handle] = true
							GenerateSideMessage(v.name,Spell.name)
						end
						if activ and IsKeyDown(ComboKey) then
							if v.activity == LuaEntityNPC.ACTIVITY_MOVE and v:CanMove() then
								me:SafeCastAbility(Spell,Vector(v.position.x + v.movespeed * 1.75 * math.cos(v.rotR), v.position.y + v.movespeed* 1.75 * math.sin(v.rotR), v.position.z)) break
							else								
								me:SafeCastAbility(Spell,Vector(v.position.x + v.movespeed * 0.05 * math.cos(v.rotR), v.position.y + v.movespeed* 0.05 * math.sin(v.rotR), v.position.z)) break
							end
						end
					else
						note[v.handle] = nil
					end
				else
					hero[v.handle].visible = false
				end
			end
		end		
	end
end

function SmartKoils(me)
	local Spell = me:GetAbility(3)
	local Spell2 = me:GetAbility(2)
	local Spell3 = me:GetAbility(1)
	local Dmg = {75,150,225,300}
	icon.textureId = drawMgr:GetTextureId("NyanUI/spellicons/"..Spell.name)
	if Spell.level > 0 then
		local DmgS = Dmg[Spell.level]
		local DmgS2 = Dmg[Spell.level]*2
		local DmgS3 = Dmg[Spell.level]*3
		local enemies = entityList:GetEntities({type=LuaEntity.TYPE_HERO,team = me:GetEnemyTeam(),illusion=false})			
		for i,v in ipairs(enemies) do
			if v.healthbarOffset ~= -1 then
				if not hero[v.handle] then
					hero[v.handle] = drawMgr:CreateText(20,0-45, 0xFFFFFF99, "",F14) hero[v.handle].visible = false hero[v.handle].entity = v hero[v.handle].entityPosition = Vector(0,0,v.healthbarOffset)
				end
				if v.visible and v.alive and v.health > 1 then
					hero[v.handle].visible = draw
					local DmgF = math.floor(v.health - SFtarget(v,me) - v:DamageTaken(DmgS,DAMAGE_MAGC,me))
					--hero[v.handle].text = " "..DmgF
					if activ and not me:IsChanneling() then
						if DmgF < 0 and KSCanDie(v,me) and (not me:IsMagicDmgImmune() and NotDieFromSpell(Spell,v,me) and not v:DoesHaveModifier("modifier_nyx_assassin_spiked_carapace") and NotDieFromBM(v,me,DmgS)) then
							local distance = GetDistance2D(me,SFrange(v))
							if distance < 940 and distance > 690 then
								SF(me,v,Spell)
							elseif distance < 690 and distance > 440 then
								SF(me,v,Spell2)
							elseif distance < 440 then		
								SF(me,v,Spell3)
							end
						end
					end
				else
					hero[v.handle].visible = false
				end
			end
		end
	end
end

function SF(me,ent,skill)
	if not stop then
		me:Attack(ent)
		stop = GetTick() + 900 - client.latency
		me:SafeCastAbility(skill)
	end
	if stop < GetTick() then
		me:Stop()
		stop = nil
	end
end

function SFrange(ent)
	if ent.activity == LuaEntityNPC.ACTIVITY_MOVE and ent:CanMove() then
		return Vector(ent.position.x + ent.movespeed * 0.9 * math.cos(ent.rotR), ent.position.y + ent.movespeed* 0.9 * math.sin(ent.rotR), ent.position.z)
	else
		return ent.position
	end
end

function SFtarget(ent,me)
	local project = entityList:GetProjectiles({name = "nevermore_base_attack"})
	for i,v in ipairs(project) do
		if ent.classId == v.target.classId then
			return ent:DamageTaken(me.dmgMin + me.dmgBonus,DAMAGE_PHYS,me)
		end
	end
	return 0 
end

function Drawning(draw,me)
	if me.classId ~= CDOTA_Unit_Hero_Zuus then
		return draw
	end
	return false
end

function GameClose()
	rect.visible = false
	icon.visible = false
	dmgCalc.visible = false
	hero = {}
	myhero = nil
	combo = false
	collectgarbage("collect")
	if reg then
		script:UnregisterEvent(Tick)
		script:UnregisterEvent(Key)
		script:RegisterEvent(EVENT_TICK,Load)
		reg = false
	end
end

script:RegisterEvent(EVENT_CLOSE,GameClose)
script:RegisterEvent(EVENT_TICK,Load)
