-- test a lot of improve. (performance,calculation,prediction)
require("libs.ScriptConfig")
require("libs.Utils")
require("libs.SideMessage")

config = ScriptConfig.new()
config:Load()

local xx = nil
local yy = nil

if math.floor(client.screenRatio*100) == 177 then
	xx = client.screenSize.x/300
	yy = client.screenSize.y/1.372
elseif math.floor(client.screenRatio*100) == 125 then
	xx = client.screenSize.x/512
	yy = client.screenSize.y/1.341
elseif math.floor(client.screenRatio*100) == 160 then
	xx = client.screenSize.x/512
	yy = client.screenSize.y/1.378
else
	xx = client.screenSize.x/512
	yy = client.screenSize.y/1.378
end

--Stuff
local hero = {} local note = {} local reg = false local combo = false
local activ = true local draw = true local myhero = nil

--Draw function
local shft = client.screenSize.x/1680
local F16 = drawMgr:CreateFont("F16","Calibri",16*shft,800*shft)

function Load()
	if PlayingGame() then
		local me = entityList:GetMyHero()
		
			reg = true
			myhero = me.classId
			script:RegisterEvent(EVENT_TICK,Tick)
			script:RegisterEvent(EVENT_KEY,Key)
			script:UnregisterEvent(Load)
		
	end
end

function Tick(tick)
	
	if not SleepCheck() then return end	Sleep(100)
	local me = entityList:GetMyHero()	
	if not me then return end
	local ID = me.classId	
	if ID ~= myhero then GameClose() end
	
	local enemies = entityList:GetEntities({type=LuaEntity.TYPE_HERO,team = 5-me.team})
		for i,v in ipairs(enemies) do
			if v.healthbarOffset ~= -1 then
				if not hero[v.handle] then
					hero[v.handle] = drawMgr:CreateText(-45,0-46, 0xFFFFFF99, "",F16) hero[v.handle].visible = false hero[v.handle].entity = v hero[v.handle].entityPosition = Vector(0,0,v.healthbarOffset)
				end
				if v.visible and v.alive and v.health > 0 then
					hero[v.handle].visible = draw
					local numlife=v.health
						if not v:IsIllusion() then
						hero[v.handle].text = " "..numlife
						elseif v:IsIllusion() then
						hero[v.handle].text = "Illusion"
						end
				elseif hero[v.handle].visible then
					hero[v.handle].visible = false
				end
			end
		end

	
	
end




function GameClose()
	
	hero = {}
	myhero = nil
	combo = false
	collectgarbage("collect")
	if reg then
		script:UnregisterEvent(Tick)
		script:UnregisterEvent(Key)
		script:RegisterEvent(EVENT_TICK,Load)
		reg = false
	end
end

script:RegisterEvent(EVENT_CLOSE,GameClose)
script:RegisterEvent(EVENT_TICK,Load)
